-----------------------------------------------------------------------
|  CHAPTER 1 - DW, BI, & DIMENSIONAL MODELING PRIMER                  |
-----------------------------------------------------------------------

- Data Capture and Data Analysis

    - Data assets of any organiation are used for 2 purposes:

        1. Operational record keeping
             - Turn the wheels of the organization
             - Optimized to process transactions quickly
             - Deal with one transaction record at a time
             - Do not maintain history, update data to reflect the most current state

        2. Analysis
             - Watch the wheels turn to evaluate performance
             - Ask questions about the business to make sure operations are working correctly
             - Optimized for queries over thousands of transactions


    - DW/BI systems have very different needs from operational systems.  DW/BI systems that just copy the
        operational systems address the need to isolate analytics for performance reasons, but users will
        be underwhelmed by their usability and performance.



- Goals of DW and BI

    - The DW/BI system must make information easily accessible.

        - The data should be intuitive and obvious to business users
        - The tools and applications must be simple and easy to use
        - Query results must be returned with minimal wait times


    - The DW/BI system must present information consistently.

        - The data must be credible
        - The data must be carefully assembled, cleaned, QA'ed, and released only when ready
        - Fields and labels should be the same across data sources


    - The DW/BI system must adapt to change.

        - Must handle change gracefully without invalidating existing data or applications
        - If system must be modified, changes should be transparent to users


    - The DW/BI system must present information in a timely way.

        - Raw data may need to be converted into actionable data within hours, minutes, or seconds
        - Business users must have realistic expectations for data when there is little time to clean it


    - The DW/BI system must be a secure bastion that protects the information assets.

        - An organization's information crown jewels are stored in the DW
        - The system must effectively control access


    - The DW/BI system must serve as the authoritative and trustworthy foundation for 
        improved decision making.

        - The DW must have the right data to support decision making
        - We must build a Decision Support System


    - The business users must accept the DW/BI system to deem it successful.

        - The system must be actively used
        - If the system is simple and fast, it will be much more likely to be used



- A DW/BI Manager's Responsibilities

    - Understand the Business Users

        - Understand responsibilities, goals, and objectives
        - Determine the decisions that business users want help making
        - Identify the "best" users who make high-impact decisions
        - Find potential new users


    - Deliver High-Quality, Relevant, and Acessible Information and Analytics

        - Choose the best data sources
        - Make UIs simple and match to users' thinking processes
        - Make sure the data is accurate and can be trusted
        - Continuously monitory the accuracy of data
        - Adapt to changing users and business 


    - Sustain the DW/BI Environment

        - Take a portion of the credit for successes
        - Update the system on a regular basis
        - Maintain the business users' trust
        - Keep users, sponsors, and management happy



- Dimensional Modeling

    - Dimensional modeling is widely preferred, because it addresses 2 requirements:

        1. Deliver information that is understandable to business users
        2. Deliver fast query performance


    - Operational systems use 3NF and ERDs to remove redundancy.  This is so that an insert or
        update transaction only has to touch the database in one place.

      However, normalized models are often too complicated for BI queries.  So, we reduce the
        level of normalization when dimensional modeling.



- Star Schemas vs OLAP Cubes

    - Dimensional models implemented in RDBMS's are known as 'star schemas', due to their
        resemblance to a star-like structure.  


    - Dimensional models implemented in multidimensional database environments are referred to
        as 'OLAP cubes'.

      When data is loaded into an OLAP cube, it is stored and indexed using techniques and 
        designed for dimensional data.  Performance aggregations or precalculated summary tables
        are often managed by the OLAP cube engine.  This allows them to deliver superior query
        performance, but it makes loading data slower, particularly with large datasets.



- OLAP Cube Deployment Considerations

    - A star schema hosted in a REBMS is a good physical foundation for building an OLAP cube.
        The star schema is generally considered more stable for backup and recovery.


    - OLAP cubes have traditionally had much better query performance, but the margins are
        narrowing.


    - OLAP cubes are better at:
        - Offering fine-grained security
        - Offering rich analysis capabilities
        - Supporting hierarchies of arbitrary depth


    - Star schemas are better at:
        - Being portable across platforms
        - Supporting changing dimensions
        - Supporting accumulating snapshots
        - Allowing flexibility of dimension keys



- Fact Tables

    - A 'fact table' stores the performance measurements resulting from an organization's 
        business process events.  We should strive to store the low-level measurement data
        resulting from a business process in this single model.


    - Since the fact table is overwhelmingly the largest set of data, we should strive to store
        it in a single place, rather than replicating it across the organization.

      Fact tables often make up 90% or more of the total space consumed by a dimensional model.


    - A 'fact' represents a business measurement.  We can imagine standing in a store, watching
        products being sold and writing down the unit quantity and dollar sales amout for each
        product in each sales transaction.


    - Each row in a fact table corresponds to a measurement event.  The data in each row is at
        a specific level of detail, referred to as the 'grain'.  In our example, this is one
        row per product in a sales transaction.

      All measurements in a fact table must be at the same grain.


    - For example, 

        [Retail Sales Facts]
          + Date Key (FK)
          + Product Key (FK)
          + Store Key (FK)
          + Promotion Key (FK)
          + Customer Key (FK)
          + Clerk Key (FK)
          + Transaction #
          + Sales Dollars
          + Sales Units


    - The most useful facts are numeric and additive, such as dollar sales amount.  Additivity
        is crucial, since we're not usually querying for a single row, but many rows.

      Semi-additive facts, such as account balances, cannot be summed across the time dimension.

      Non-additive facts, such as unit prices, can never be added.  Only counts and averages can
        be used.


    - When trying to sort facts and dimensions, facts are often described as continuous values.


    - All fact table grains fall into one of 3 categories:

        1. Transactions (most common)
        2. Periodic Snapshots
        3. Accumulating Snapshots


    - A fact table generally has a composite primary key, consisting of some subset of its foreign
        keys.



- Dimension Tables

    - 'Dimension tables' contain the textual content associated with a business process
        measurement event.  They often have many columns.  They describe the 'who, what,
        where, why, when, and how' of the event.


    - Example

        [Product Dimension]
          + Product Key (PK)
          + SKU Number (Natural Key)
          + Product Description
          + Brand Name
          + Category Name
          + Department Name
          + Package Type
          + Package Size
          + Abrasive Indicator
          + Weight
          + Weight Unit of Measure
          + Storage Type
          + Shelf Life Type
          + Shelf Width
          + Shelf Height
          + Shelf Depth
          + ...


    - Dimension tables attributes are the primary source of query constraints, groupings, and
        report labels.


    - Operational codes sometimes have intelligence embedded in them. For example: 
        - the first two digits may identify the line of business
        - the next two digits may identify the global region 

      Rather than forcing users to interrogate or filter on substrings within the operational 
        codes, pull out the embedded meanings and present them to users as separate dimension 
        attributes that can easily be filtered, grouped, or reported.


    - The analytic power of the DW/BI environment is directly proportional to the depth and 
        quality of the dimension attributes.


    - Dimension tables often represent hierarchical relationships.  For example, products roll
        up into brands, and then into categories.  

      This hierarchical information should be stored redundantly in the spirit of ease of use
        and query performance.

        Product Key       Product Description          Brand Name            Company Name
        ------------------------------------------------------------------------------------
        1                 PowerAll 20 oz               PowerClean            All Purpose Cleaner
        2                 PowerAll 32 oz               PowerClean            All Purpose Cleaner
        3                 PowerAll 48 oz               PowerClean            All Purpose Cleaner
        4                 PowerAll 64 oz               PowerClean            All Purpose Cleaner
        5                 ZipAll 20 oz                 Zippy                 All Purpose Cleaner
        6                 ZipAll 32 oz                 Zippy                 All Purpose Cleaner
        7                 ZipAll 48 oz                 Zippy                 All Purpose Cleaner
        8                 ZipAll 64 oz                 Zippy                 All Purpose Cleaner
        9                 Shiny 20 oz                  Clean Fast            Glass Cleaner
        10                Shiny 32 oz                  Clean Fast            Glass Cleaner


    - The 'fact' and 'dimension' terminology originated from a joint study conducted by General
        Mills and Dartmouth University in the 1960s.



- Facts and Dimensions Joined in a Star Schema

    - The fact table and set of dimension tables that models a business process is often called a
        'star join'.  


    - Databases can get good query performance by first constraining the heavily indexed dimension
        tables, then attack the fact table all at once with the Cartesian product of the dimension
        table keys satisfying the user's constraints.  This requires only a single pass through
        the fact table's index.


    - Dimension attributes supply the report filtering and labeling, whereas the fact tables supply the
        report's numeric values.


    - We can easily imagine creating BI reports using simple SQL queries:

        SELECT     
            store.district_name,
            product.brand,
            sum(sales_facts.sales_dollars) AS "Sales Dollars"
        FROM     
            store,
            product,
            date,
            sales_facts
        WHERE
            date.month_name="January" AND
            date.year=2013 AND
            store.store_key = sales_facts.store_key AND
            product.product_key = sales_facts.product_key AND
            date.date_key = sales_facts.date_key
        GROUP BY     
            store.district_name,
            product.brand



- Kimball's DW/BI Architecture

    - There are 4 separate components to consider in the DW/BI system.

        1. Operational source systems
        2. ETL system
        3. Data presentation area
        4. BI applications


    - Operational Source Systems

        - Operational systems of record that capture business transactions
        - Outside the DW, and we have little control over them
        - Priorities are performance and availability
        - Don't maintain historical data
        - Mostly special-purpose systems without common data, but ERP may integrate them


    - ETL System

        - Extraction = read and understand source data, and copy it into DW
        - Transform = Clean data, put into standard formats, QA, enhance data
        - Load = Load data into physical structure of dimensional model
        - Join 3NF tables into denormalized dimensional tables
        - Need ETL for both fact table and dimension tables


    - Data Presentation Area

        - Area where data is organized, stored, and made available for user queries and BI apps
        - Data should be in dimensional models, either star schemas or OLAP cubes
        - Must contain detailed, atomic data for ad hoc queries (not just summary data)
        - Should be structured around business process measurement events
        - Dimensional structures must use common, conformed dimensions across different departments


    - BI Applications

        - The range of capabilities provided to business users to leverage for decision making
        - Can be ad hoc query tool or sophisticated modeling application


    - Kitchen Analogy

        - Operational source system = raw ingredients
        - ETL system = kitchen
        - Data Presentation and BI = front dining room



- Alternative DW/BI Architectures

    - Independent Data Mart Architecture

        - Analytic data deployed on a departmental basis without worrying about sharing across enterprise
        - Data is in silos, this is not recommended, but is prevalent in industry
        - Path of least resistence, due to how funds are distributed, but wasteful in long run
        - Data from different marts is difficult to combine due to different rules and labeling


    - Hub-and-Spoke Corporate Information Factory (Inmon Architecture)

        - Data is extracted from source systems and put into 3NF structures in DW
        - Enforces referential integrity of dimensions
        - More difficult to query
        - Could have a hybrid approach where you first do 3NF, then create dimensional model from it



- Dimensional Modeling Myths

    - Dimensional models are only for summary data.

        - Data should be granular to allow for ad hoc queries.
        - Atomic data can handle changes easily.
        - Summary data should complement the atomic data.
        - Also, we can store any amount of historical data in dimensional models.


    - Dimensional models are departmental, not enterprise.

        - Models should be organized around business processes, not departments.
        - Multiple business processes often want to analyze the same metrics.


    - Dimensional models are not scalable.

        - Dimensional models are extremely scalable.


    - Dimensional models are only for predictable usage.

        - Dimensional models should not be designed by focusing on predefined reports or analyses.
        - We want to keep the data atomic so that any future report can be generated.


    - Dimensional models can't be integrated.

        - Dimensional models can be integrated if they conform to the enterprise data warehouse bus
        - Conformed dimensions are built and maintained in the ETL system